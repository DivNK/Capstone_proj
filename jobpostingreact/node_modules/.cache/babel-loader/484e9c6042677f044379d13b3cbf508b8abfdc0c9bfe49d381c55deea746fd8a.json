{"ast":null,"code":"var _jsxFileName = \"D:\\\\Divya\\\\Capstone_proj\\\\jobpostingreact\\\\src\\\\Component\\\\Subsnap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const navigate = useNavigate();\n  let [datacd, setDatacd] = useState([]);\n  let [str, setStr] = useState('');\n  const {\n    state\n  } = useLocation();\n  let [dataappprofile, setDataappprofile] = useState([]);\n  let apply = [];\n  console.log(\"in Snapshort element\");\n  console.log(state);\n  useEffect(() => {\n    const fetchall = async () => {\n      var url = \"/job\";\n      setStr(\"Jobs in Domain\");\n      if (state == \"i-box2\") {\n        setStr(\"Eligible Jobs\");\n        url = \"/searcheligible\";\n      }\n      elseif(state == \"i-box3\");\n      {\n        setStr(\"Applied Jobs\");\n        url = \"/appliedjob\";\n      }\n      try {\n        let res = await Axios.get(url); // if you use proxy then only /book isusing cros gem then complete path\n        let resappprofile = await Axios.get(\"/appprofile\");\n        console.log(res.data);\n        console.log(\"Inside Snapshot Menu\");\n        console.log(str);\n        setDatacd(res.data);\n        setDataappprofile(resappprofile.data);\n      } catch (e) {\n        console.log(e);\n        navigate(-1);\n      }\n    };\n    fetchall();\n  }, []);\n  console.log(\"data\");\n  console.log(datacd);\n  console.log(str);\n  datacd.map((job, i) => {\n    let str = dataappprofile.filter(e => e.jobid == job.id);\n    console.log(job);\n    console.log(i);\n    console.log(str.length > 0);\n    if (str.length > 0) {\n      apply.push(false);\n    } else {\n      apply.push(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      str: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this), datacd.length ? datacd.map(a => /*#__PURE__*/_jsxDEV(Card, {\n      jobdata: a,\n      app: apply[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 83\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bkYdA7PlokV0vicSlb73KdgC44M=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Search","Card","Axios","useNavigate","App","navigate","datacd","setDatacd","str","setStr","state","dataappprofile","setDataappprofile","apply","console","log","fetchall","url","elseif","res","get","resappprofile","data","e","map","job","i","filter","jobid","id","length","push","a"],"sources":["D:/Divya/Capstone_proj/jobpostingreact/src/Component/Subsnap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {useLocation} from 'react-router-dom';\r\nimport Search from \"./Search\"\r\nimport Card from \"./Card\"\r\nimport Axios from \"axios\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n    const navigate = useNavigate();\r\n    let [datacd, setDatacd] = useState([]);\r\n    let [str, setStr] = useState('');\r\n    const { state } = useLocation();\r\n    let [dataappprofile, setDataappprofile] = useState([]);\r\n    let apply=[]\r\n \r\n    console.log(\"in Snapshort element\");\r\n    console.log(state);\r\n    useEffect(()=>{\r\n        const fetchall = async () =>{\r\n            var url=\"/job\"\r\n            setStr(\"Jobs in Domain\")\r\n            if(state==\"i-box2\")\r\n            {\r\n                setStr(\"Eligible Jobs\")\r\n                url=\"/searcheligible\"\r\n            }elseif(state==\"i-box3\")\r\n            {\r\n                setStr(\"Applied Jobs\")\r\n                url=\"/appliedjob\"\r\n            }\r\n            try{\r\n                let res = await Axios.get(url); // if you use proxy then only /book isusing cros gem then complete path\r\n                let resappprofile = await Axios.get(\"/appprofile\");\r\n            console.log(res.data);\r\n            console.log(\"Inside Snapshot Menu\");\r\n            console.log(str);\r\n            setDatacd(res.data)\r\n            setDataappprofile(resappprofile.data)\r\n\r\n        }catch(e)\r\n        {\r\n            \r\n            console.log(e);\r\n            navigate(-1)\r\n        }\r\n\r\n        }\r\n        fetchall()\r\n    },[])\r\n    console.log(\"data\");\r\n    console.log(datacd);\r\n    console.log(str);\r\n    datacd.map((job,i)=>{\r\n        let str=dataappprofile.filter((e)=>e.jobid==job.id)\r\n        console.log(job)\r\n        console.log(i)\r\n        console.log(str.length>0);\r\n        if(str.length>0)\r\n        {\r\n           apply.push(false)\r\n        }else\r\n        {\r\n            apply.push(true)\r\n        }\r\n        \r\n     } )\r\n    return (\r\n        <>\r\n           <Search str={str}></Search>\r\n           {datacd.length?datacd.map(a=><Card jobdata={a} app={apply[i]}></Card>):<div>No data</div>}\r\n        </>\r\n\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}