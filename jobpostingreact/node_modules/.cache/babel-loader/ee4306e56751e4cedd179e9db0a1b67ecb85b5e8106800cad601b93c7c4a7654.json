{"ast":null,"code":"var _jsxFileName = \"D:\\\\CAPSTONE\\\\Capstone_proj\\\\jobpostingreact\\\\src\\\\Component\\\\Subsnap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const navigate = useNavigate();\n  let [datacd, setDatacd] = useState([]);\n  let [str, setStr] = useState('');\n  const {\n    state\n  } = useLocation();\n  let [dataappprofile, setDataappprofile] = useState([]);\n  let apply = [];\n  console.log(\"in Snapshort element\");\n  console.log(state);\n  useEffect(() => {\n    const fetchall = async () => {\n      var url = \"/job\";\n      setStr(\"Jobs in Domain\");\n      if (state == \"i-box2\") {\n        setStr(\"Eligible Jobs\");\n        url = \"/searcheligible\";\n      }\n      if (state == \"i-box3\") {\n        setStr(\"Applied Jobs\");\n        url = \"/appliedjob\";\n      }\n      try {\n        let res = await Axios.get(url); // if you use proxy then only /book isusing cros gem then complete path\n        let resappprofile = await Axios.get(\"/appprofile\");\n        console.log(res.data);\n        console.log(\"Inside Snapshot Menu\");\n        console.log(str);\n        setDatacd(res.data);\n        setDataappprofile(resappprofile.data);\n      } catch (e) {\n        console.log(e);\n        navigate(-1);\n      }\n    };\n    fetchall();\n  }, []);\n  console.log(\"data\");\n  console.log(datacd);\n  console.log(str);\n  datacd.map((job, i) => {\n    let str = dataappprofile.filter(e => e.jobid == job.id);\n    console.log(job);\n    console.log(i);\n    console.log(str.length > 0);\n    if (str.length > 0) {\n      apply.push(false);\n    } else {\n      apply.push(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      str: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this), datacd.length ? datacd.map((a, i) => /*#__PURE__*/_jsxDEV(Card, {\n      jobdata: a,\n      app: apply[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 87\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bkYdA7PlokV0vicSlb73KdgC44M=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Search","Card","Axios","useNavigate","App","navigate","datacd","setDatacd","str","setStr","state","dataappprofile","setDataappprofile","apply","console","log","fetchall","url","res","get","resappprofile","data","e","map","job","i","filter","jobid","id","length","push","a"],"sources":["D:/CAPSTONE/Capstone_proj/jobpostingreact/src/Component/Subsnap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {useLocation} from 'react-router-dom';\nimport Search from \"./Search\"\nimport Card from \"./Card\"\nimport Axios from \"axios\"\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function App() {\n    const navigate = useNavigate();\n    let [datacd, setDatacd] = useState([]);\n    let [str, setStr] = useState('');\n    const { state } = useLocation();\n    let [dataappprofile, setDataappprofile] = useState([]);\n    let apply=[]\n \n    console.log(\"in Snapshort element\");\n    console.log(state);\n    useEffect(()=>{\n        const fetchall = async () =>{\n            var url=\"/job\"\n            setStr(\"Jobs in Domain\")\n            if(state==\"i-box2\")\n            {\n                setStr(\"Eligible Jobs\")\n                url=\"/searcheligible\"\n            }if(state==\"i-box3\")\n            {\n                setStr(\"Applied Jobs\")\n                url=\"/appliedjob\"\n            }\n            try{\n                let res = await Axios.get(url); // if you use proxy then only /book isusing cros gem then complete path\n                let resappprofile = await Axios.get(\"/appprofile\");\n            console.log(res.data);\n            console.log(\"Inside Snapshot Menu\");\n            console.log(str);\n            setDatacd(res.data)\n            setDataappprofile(resappprofile.data)\n\n        }catch(e)\n        {\n            \n            console.log(e);\n            navigate(-1)\n        }\n\n        }\n        fetchall()\n    },[])\n    console.log(\"data\");\n    console.log(datacd);\n    console.log(str);\n    datacd.map((job,i)=>{\n        let str=dataappprofile.filter((e)=>e.jobid==job.id)\n        console.log(job)\n        console.log(i)\n        console.log(str.length>0);\n        if(str.length>0)\n        {\n           apply.push(false)\n        }else\n        {\n            apply.push(true)\n        }\n        \n     } )\n    return (\n        <>\n           <Search str={str}></Search>\n           {datacd.length?datacd.map((a,i)=><Card jobdata={a} app={apply[i]}></Card>):<div>No data</div>}\n        </>\n\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}